upstream rails_app {
  # serviço “web” do docker-compose
  server web:3000;
}

server {
  listen 80;
  server_name _;

  # ─────────────────────────────────────
  #  Segurança básica
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-Content-Type-Options "nosniff";
  add_header Referrer-Policy "strict-origin-when-cross-origin";
  add_header X-XSS-Protection "1; mode=block";

  # ─────────────────────────────────────
  #  Arquivos estáticos e assets pré-compilados
  location /assets/ {
    alias /rails/public/assets/;      # pasta dentro do container Nginx
    gzip_static  on;                  # serve .gz se existir
    expires      max;
    add_header   Cache-Control public;
    add_header   Access-Control-Allow-Origin *;
  }

  # ActiveStorage, imagens, PDFs
  location /uploads/ {
    alias /rails/public/uploads/;
    expires 30d;
    add_header Cache-Control public;
  }

  # ─────────────────────────────────────
  #  Proxy para o Rails
  location / {
    proxy_pass         http://rails_app;
    proxy_set_header   Host              $host;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Real-IP         $remote_addr;

    # evita timeouts longos em requisições lentas
    proxy_read_timeout  60s;
    proxy_connect_timeout 30s;
    proxy_send_timeout  30s;
  }

  # ─────────────────────────────────────
  #  Health-check simples
  location /healthz {
    access_log off;
    return 200 "OK\n";
  }

  # ─────────────────────────────────────
  #  Gzip (apenas texto, não zip duplicado)
  gzip              on;
  gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_vary         on;
}
